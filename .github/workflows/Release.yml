name: Release
concurrency: Releases

on: workflow_dispatch

jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: src

      - name: Setup
        uses: oven-sh/setup-bun@v1

      - name: Install
        run: bun install --production

      - name: Build
        run: bun run build

      - name: Get Version
        id: version
        run: |
          version=$(jq --raw-output '.version // "0.0.0"' package.json)
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: dist
          name: Build
          if-no-files-found: error

  Release:
    needs: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          path: dist
          name: Build

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.Build.outputs.version }}
          tag_name: v${{ needs.Build.outputs.version }}
          prerelease: ${{ contains(needs.Build.outputs.version, '-') }}
          files: dist/*
          generate_release_notes: true

  Submit:
    needs: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          path: dist
          name: Build

      - name: Ensure Branch
        id: branch
        uses: peterjgrainger/action-create-branch@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: submit

      - name: Submit
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          FOLDER: dist
          BRANCH: submit
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SQUASH_HISTORY: ${{ steps.branch.outputs.created }}
          SKIP_EMPTY_COMMITS: true
          MESSAGE: ${{ github.sha }} âžœ Submit commits to BetterDiscord